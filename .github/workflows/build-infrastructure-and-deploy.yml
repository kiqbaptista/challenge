name: Terraform Azure Pipeline

on:
  push:
    branches:
    - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: List all files
      run: ls -lha

    - name: Terraform Init
      run: |
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
        terraform -chdir="./resources/dev" init

    - name: Terraform Plan
      run: |
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
        terraform -chdir="./resources/dev" plan

    - name: Terraform Apply
      run: |
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
        terraform -chdir="./resources/dev" apply -auto-approve

    - name: Docker build and push
      run: |
        docker build -t acrchallenge.azurecr.io/api-web:${GITHUB_SHA} .
        docker login acrchallenge.azurecr.io -u acrchallenge -p ${{ secrets.DOCKER_PASSWORD}}
        docker push acrchallenge.azurecr.io/api-web:${GITHUB_SHA}

    - name: Replace image line in values.yaml
      run: |
        container_id=$(docker inspect -f '{{.Id}}' acrchallenge.azurecr.io/api-web:${GITHUB_SHA})
        sed -i "s/image: challenge-dev:latest/image: $container_id/" values.yaml
